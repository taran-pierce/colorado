---
import { places } from '../../utils/places';
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/Container.astro';
import BreadCrumbs from '../../components/BreadCrumbs.astro';
import PhotoBlock from '../../components/PhotoBlock.jsx';

export function getStaticPaths() {
  const tagsArray = [] as Array<string>;

  places.forEach((place) => {    
    place.tags.forEach((tag:string) => {
      tagsArray.push(tag);
    });
  });

  const pages = tagsArray.map((tag: string) => {
    return {
      params:  {
        path: tag,
      }
    }
  });
  
  return pages;
}

const {
  path,
} = Astro.params;

const title = path.split('-').join(' ');
const titleCase = title.charAt(0).toUpperCase() + title.slice(1);

// api to get the URL transforms from Cloudinary
// path in the URL after /location/ needs to match a "tag" in Cloudinary
const response = await fetch(`http://photos.taranpierce.com/api/${path}.json`, {
  method: 'GET',
});

const data = await response.json();

---

<Layout title={titleCase}>
  <main>
    <Container>
      <h1>Photos of {titleCase}</h1>
      <BreadCrumbs
        previousPages={
          [
            {
              name: 'home',
              path: '/',
            },
            {
              name: 'places',
              path: '/places',
            },
          ]
        }
      />
      <p>Looks like we got {data?.length} photos here!</p>
      <PhotoBlock imageData={data} />
    </Container>
  </main>
</Layout>

<style>
  .photo-wrapper {
    display: grid;
    grid-template-columns: auto;
    gap: var(--padding-main);

    img {
      display: block;
      margin: 0 auto;
      max-width: 100%;
      border: 1px solid var(--color-primary);
    }
  }

  @media(min-width: 768px) {
    .photo-wrapper {
      grid-template-columns: 1fr 1fr;
    }
  }

  @media(min-width: 992) {
    .photo-wrapper {
      grid-template-columns: 1fr 1fr 1fr;
    }
  }
</style>